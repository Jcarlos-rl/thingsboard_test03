{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : "Cadena de reglas para dispositivos iBeacon que se comunican por MQTT. Está acoplada para el proyecto de Multiva."
    },
    "configuration" : null,
    "debugMode" : false,
    "externalId" : {
      "entityType" : "RULE_CHAIN",
      "id" : "092d3950-ad49-11ed-b5b8-2b47d7169213"
    },
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "ca856610-da46-11ee-880e-ed784018c015"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "092d3950-ad49-11ed-b5b8-2b47d7169213"
    },
    "name" : "iBeacon_MQTT",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 14,
      "type" : "Success"
    }, {
      "fromIndex" : 1,
      "toIndex" : 2,
      "type" : "Success"
    }, {
      "fromIndex" : 2,
      "toIndex" : 10,
      "type" : "False"
    }, {
      "fromIndex" : 2,
      "toIndex" : 12,
      "type" : "False"
    }, {
      "fromIndex" : 3,
      "toIndex" : 4,
      "type" : "Success"
    }, {
      "fromIndex" : 3,
      "toIndex" : 10,
      "type" : "Success"
    }, {
      "fromIndex" : 6,
      "toIndex" : 0,
      "type" : "Post telemetry"
    }, {
      "fromIndex" : 6,
      "toIndex" : 5,
      "type" : "Post attributes"
    }, {
      "fromIndex" : 6,
      "toIndex" : 7,
      "type" : "RPC Request from Device"
    }, {
      "fromIndex" : 6,
      "toIndex" : 8,
      "type" : "Other"
    }, {
      "fromIndex" : 6,
      "toIndex" : 9,
      "type" : "RPC Request to Device"
    }, {
      "fromIndex" : 6,
      "toIndex" : 21,
      "type" : "Post telemetry"
    }, {
      "fromIndex" : 12,
      "toIndex" : 3,
      "type" : "False"
    }, {
      "fromIndex" : 12,
      "toIndex" : 13,
      "type" : "True"
    }, {
      "fromIndex" : 13,
      "toIndex" : 3,
      "type" : "True"
    }, {
      "fromIndex" : 14,
      "toIndex" : 15,
      "type" : "True"
    }, {
      "fromIndex" : 15,
      "toIndex" : 16,
      "type" : "True"
    }, {
      "fromIndex" : 16,
      "toIndex" : 20,
      "type" : "Success"
    }, {
      "fromIndex" : 17,
      "toIndex" : 18,
      "type" : "Success"
    }, {
      "fromIndex" : 19,
      "toIndex" : 11,
      "type" : "Alarm Cleared"
    }, {
      "fromIndex" : 19,
      "toIndex" : 11,
      "type" : "Alarm Created"
    }, {
      "fromIndex" : 20,
      "toIndex" : 17,
      "type" : "False"
    }, {
      "fromIndex" : 20,
      "toIndex" : 19,
      "type" : "False"
    }, {
      "fromIndex" : 21,
      "toIndex" : 22,
      "type" : "Success"
    }, {
      "fromIndex" : 22,
      "toIndex" : 23,
      "type" : "True"
    } ],
    "firstNodeIndex" : 6,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1045,
        "layoutY" : 101
      },
      "configuration" : {
        "tellFailureIfAbsent" : false,
        "fetchTo" : "METADATA",
        "clientAttributeNames" : [ ],
        "sharedAttributeNames" : [ ],
        "serverAttributeNames" : [ "macDispositivo1", "macDispositivo2", "macDispositivo3" ],
        "latestTsKeyNames" : [ ],
        "getLatestValueWithTs" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca7bf030-da46-11ee-880e-ed784018c015"
      },
      "name" : "obtenerMacSensores",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : "Este script valida que las mac de cada sensor estén correctamente configuradas y asignadas al tipo de sensor que les corresponde. Si están correctamente configuradas y asignadas, entonces envía los valores separados. Esto suple a los conversores de datos y a las integraciones.",
        "layoutX" : 1358,
        "layoutY" : 103
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "//Este script revisa las MAC que se configuraron para los sensores de TH, Liquidos, Puerta, CFE y UPS, y separa las variables correspondientes.\n\nfunction validarTemperatura(temperatura){\n    if(temperatura <= 0 || temperatura >= 0.01)\n        {return true;}\n        else\n        {return false;}\n}\n\n\nswitch (msg.mac){\n    case metadata.ss_macTemperaturaHumedad:\n        if (msg.type == \"S1\"){\n        \n        if(!validarTemperatura(msg.temperature))\n        {\n            var newMSG = {error: \"Lectura de temperatura errónea\"};\n            break;\n        }\n        \n        var newMSG = {\n        S1_TH_001_rssi: msg.rssi,\n        S1_TH_001_battery: msg.battery,\n        S1_TH_001_temperature: msg.temperature,\n        S1_TH_001_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        \n        }\n        break;\n        case metadata.ss_macTemperaturaHumedad2:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_002_rssi: msg.rssi,\n        S1_TH_002_battery: msg.battery,\n        S1_TH_002_temperature: msg.temperature,\n        S1_TH_002_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        \n        }\n        break;\n    case metadata.ss_macTemperaturaHumedad3:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_003_rssi: msg.rssi,\n        S1_TH_003_battery: msg.battery,\n        S1_TH_003_temperature: msg.temperature,\n        S1_TH_003_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        \n        }\n        break;\n    case metadata.ss_macTemperaturaHumedad4:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_004_rssi: msg.rssi,\n        S1_TH_004_battery: msg.battery,\n        S1_TH_004_temperature: msg.temperature,\n        S1_TH_004_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        \n        }\n        break;\n    case metadata.ss_macTemperaturaHumedad5:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_005_rssi: msg.rssi,\n        S1_TH_005_battery: msg.battery,\n        S1_TH_005_temperature: msg.temperature,\n        S1_TH_005_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        \n        }\n        break;\n    case metadata.ss_macPuerta:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_Puerta_001_rssi: msg.rssi,\n        S4_Puerta_001_battery: msg.battery,\n        S4_Puerta_001_unlocked: msg.unlocked,\n        S4_Puerta_001_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    case metadata.ss_macLiquidos:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_Liquidos_002_rssi: msg.rssi,\n        S4_Liquidos_002_battery: msg.battery,\n        S4_Liquidos_002_unlocked: msg.unlocked,\n        S4_Liquidos_002_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macMiniSplit1:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_MiniSplit_001_rssi: msg.rssi,\n        S4_MiniSplit_001_battery: msg.battery,\n        S4_MiniSplit_001_unlocked: msg.unlocked,\n        S4_MiniSplit_001_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        \n        break;\n        case metadata.ss_macMiniSplit2:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_MiniSplit_002_rssi: msg.rssi,\n        S4_MiniSplit_002_battery: msg.battery,\n        S4_MiniSplit_002_unlocked: msg.unlocked,\n        S4_MiniSplit_002_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        \n        break;\n        case metadata.ss_macMiniSplit3:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_MiniSplit_003_rssi: msg.rssi,\n        S4_MiniSplit_003_battery: msg.battery,\n        S4_MiniSplit_003_unlocked: msg.unlocked,\n        S4_MiniSplit_003_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        \n        break;\n        case metadata.ss_macMiniSplit4:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_MiniSplit_004_rssi: msg.rssi,\n        S4_MiniSplit_004_battery: msg.battery,\n        S4_MiniSplit_004_unlocked: msg.unlocked,\n        S4_MiniSplit_004_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        \n        break;\n        case metadata.ss_macMiniSplit5:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_MiniSplit_005_rssi: msg.rssi,\n        S4_MiniSplit_005_battery: msg.battery,\n        S4_MiniSplit_005_unlocked: msg.unlocked,\n        S4_MiniSplit_005_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        \n        break;\n        case metadata.ss_macCFE:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_CFE_003_rssi: msg.rssi,\n        S4_CFE_003_battery: msg.battery,\n        S4_CFE_003_unlocked: msg.unlocked,\n        S4_CFE_003_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macCFE2:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_CFE2_003_rssi: msg.rssi,\n        S4_CFE2_003_battery: msg.battery,\n        S4_CFE2_003_unlocked: msg.unlocked,\n        S4_CFE2_003_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macCFE3:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_CFE3_003_rssi: msg.rssi,\n        S4_CFE3_003_battery: msg.battery,\n        S4_CFE3_003_unlocked: msg.unlocked,\n        S4_CFE3_003_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macUPS:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_UPS_004_rssi: msg.rssi,\n        S4_UPS_004_battery: msg.battery,\n        S4_UPS_004_unlocked: msg.unlocked,\n        S4_UPS_004_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macUPS2:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_UPS2_004_rssi: msg.rssi,\n        S4_UPS2_004_battery: msg.battery,\n        S4_UPS2_004_unlocked: msg.unlocked,\n        S4_UPS2_004_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macUPS3:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_UPS3_004_rssi: msg.rssi,\n        S4_UPS3_004_battery: msg.battery,\n        S4_UPS3_004_unlocked: msg.unlocked,\n        S4_UPS3_004_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    default:\n        var newMSG = {error: \"La MAC registrada no coincide con ningún sensor.\"};\n}\n\n        var newMetadata = {\n        deviceType: metadata.deviceType,\n        deviceName: metadata.deviceName,\n        ts: metadata.ts};\n\nreturn {msg: newMSG, metadata: newMetadata, msgType: msgType};\n\n\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca7e6130-da46-11ee-880e-ed784018c015"
      },
      "name" : "separarVariables",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "Revisa si la separación de variables no marcó error. Si marcó error, es porque la MAC del sensor no coincide con ninguna de las registradas y descarta el paquete. Conectamos cuando el resultado sea FALSO, ya que cuando es verdadero, es cuando marcó error.",
        "layoutX" : 1635,
        "layoutY" : 101
      },
      "configuration" : {
        "messageNames" : [ "error" ],
        "metadataNames" : [ ],
        "checkAllKeys" : true
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca81bc90-da46-11ee-880e-ed784018c015"
      },
      "name" : "noError",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbCheckMessageNode"
    }, {
      "additionalInfo" : {
        "description" : "Subimos la información como si fuera parte del activo.",
        "layoutX" : 2248,
        "layoutY" : 99
      },
      "configuration" : {
        "originatorSource" : "RELATED",
        "entityType" : null,
        "entityNamePattern" : null,
        "relationsQuery" : {
          "fetchLastLevelOnly" : false,
          "direction" : "TO",
          "maxLevel" : 1,
          "filters" : [ {
            "relationType" : "Contains",
            "entityTypes" : [ "ASSET" ]
          } ]
        }
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca82ce00-da46-11ee-880e-ed784018c015"
      },
      "name" : "convertirActivo",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode"
    }, {
      "additionalInfo" : {
        "description" : "Guardamos las variables que separamos de los beacons G1. ",
        "layoutX" : 2555,
        "layoutY" : 105
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca840680-da46-11ee-880e-ed784018c015"
      },
      "name" : "guardarVariables",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 878,
        "layoutY" : 611
      },
      "configuration" : {
        "scope" : "CLIENT_SCOPE",
        "updateAttributesOnlyOnValueChange" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca84c9d0-da46-11ee-880e-ed784018c015"
      },
      "name" : "Save Client Attributes",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 576,
        "layoutY" : 205
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca856610-da46-11ee-880e-ed784018c015"
      },
      "name" : "Message Type Switch",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 880,
        "layoutY" : 674
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca860250-da46-11ee-880e-ed784018c015"
      },
      "name" : "Log RPC from Device",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 879,
        "layoutY" : 735
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca869e90-da46-11ee-880e-ed784018c015"
      },
      "name" : "Log Other",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 878,
        "layoutY" : 798
      },
      "configuration" : {
        "timeoutInSeconds" : 60
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca8788f0-da46-11ee-880e-ed784018c015"
      },
      "name" : "RPC Call Request",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 2156,
        "layoutY" : 191
      },
      "configuration" : {
        "persistAlarmRulesState" : false,
        "fetchAlarmRulesStateOnStart" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca8936a0-da46-11ee-880e-ed784018c015"
      },
      "name" : "alarmasSistema",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.profile.TbDeviceProfileNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 2325,
        "layoutY" : 527
      },
      "configuration" : {
        "ruleChainId" : "5d079090-ad4c-11ed-b5b8-2b47d7169213"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca89f9f0-da46-11ee-880e-ed784018c015"
      },
      "name" : "alarmas",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1936,
        "layoutY" : 101
      },
      "configuration" : {
        "messageNames" : [ "S1_TH_001_temperature", "S1_TH_002_temperature", "S1_TH_003_temperature", "S1_TH_004_temperature", "S1_TH_005_temperature" ],
        "metadataNames" : [ ],
        "checkAllKeys" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca8b5980-da46-11ee-880e-ed784018c015"
      },
      "name" : "SensorTemperatura",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbCheckMessageNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 2104,
        "layoutY" : 5
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var contador = 0;\nvar temperatura;\n\nfor (var clave in msg){\n    contador++;\n    if (clave === \"S1_TH_001_temperature\" || clave === \"S1_TH_002_temperature\" || clave === \"S1_TH_003_temperature\" || clave === \"S1_TH_004_temperature\" || clave === \"S1_TH_005_temperature\"){\n        temperatura = msg[clave];\n        break;\n    }\n}\n\n\nreturn temperatura >= 0.001 || temperatura <= 0;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ca8d0730-da46-11ee-880e-ed784018c015"
      },
      "name" : "filtrarTemperaturas",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1251,
        "layoutY" : 282
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var arrMacs = [\n    metadata.ss_macDispositivo1,\n    metadata.ss_macDispositivo2,\n    metadata.ss_macDispositivo3\n];\n\nvar found = false;\nfor (var i = 0; i < arrMacs.length; i++) {\n  if (arrMacs[i] === msg.mac) {\n    found = true;\n    break;\n  }\n}\n\nreturn found;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0d8f2a40-da4c-11ee-880e-ed784018c015"
      },
      "name" : "ValidarMac",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1476,
        "layoutY" : 282
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var arrTypes = {};\narrTypes[metadata.ss_macDispositivo1] = \"S1\";\narrTypes[metadata.ss_macDispositivo2] = \"S1\";\narrTypes[metadata.ss_macDispositivo3] = \"MST01\";\n\nif (msg.type !== arrTypes[msg.mac]) {\n    return false;\n}\n\nvar temperaturaValida = (msg.temperature > 0 && msg.temperature < 0.01) ? false : true;\nif (!temperaturaValida) {\n    return false;\n}\n\nreturn true;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "8b806ad0-da4d-11ee-880e-ed784018c015"
      },
      "name" : "ValidarType",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1699,
        "layoutY" : 283
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var newMetadata = {\n  deviceType: metadata.deviceType,\n  deviceName: metadata.deviceName,\n  ts: metadata.ts\n};\n\nvar attribute = {};\nattribute[metadata.ss_macDispositivo1] = \"S1_TH_001\";\nattribute[metadata.ss_macDispositivo2] = \"S1_TH_002\";\nattribute[metadata.ss_macDispositivo3] = \"S1_TH_003\";\n\nvar newMSG = {};\n\nnewMSG[attribute[msg.mac] + \"_rssi\"] = msg.rssi;\nnewMSG[attribute[msg.mac] + \"_battery\"] = msg.battery;\nnewMSG[attribute[msg.mac] + \"_temperature\"] = msg.temperature;\nnewMSG[attribute[msg.mac] + \"_humidity\"] = msg.humidity;\n\n\nreturn {msg: newMSG, metadata: newMetadata, msgType: msgType};",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "4bfc6dd0-da4f-11ee-880e-ed784018c015"
      },
      "name" : "GenerarObjeto",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "Subimos la información como si fuera parte del activo.",
        "layoutX" : 2181,
        "layoutY" : 283
      },
      "configuration" : {
        "originatorSource" : "RELATED",
        "entityType" : null,
        "entityNamePattern" : null,
        "relationsQuery" : {
          "fetchLastLevelOnly" : false,
          "direction" : "TO",
          "maxLevel" : 1,
          "filters" : [ {
            "relationType" : "Contains",
            "entityTypes" : [ "ASSET" ]
          } ]
        }
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a0f3800-da5c-11ee-880e-ed784018c015"
      },
      "name" : "convertirActivo",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode"
    }, {
      "additionalInfo" : {
        "description" : "Guardamos las variables que separamos de los beacons G1. ",
        "layoutX" : 2417,
        "layoutY" : 282
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a0ffb50-da5c-11ee-880e-ed784018c015"
      },
      "name" : "guardarVariables",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 2236,
        "layoutY" : 407
      },
      "configuration" : {
        "persistAlarmRulesState" : false,
        "fetchAlarmRulesStateOnStart" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "8b2b4720-da67-11ee-880e-ed784018c015"
      },
      "name" : "alarmasSistema",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.profile.TbDeviceProfileNode"
    }, {
      "additionalInfo" : {
        "description" : "Revisa si la separación de variables no marcó error. Si marcó error, es porque la MAC del sensor no coincide con ninguna de las registradas y descarta el paquete. Conectamos cuando el resultado sea FALSO, ya que cuando es verdadero, es cuando marcó error.",
        "layoutX" : 1948,
        "layoutY" : 283
      },
      "configuration" : {
        "messageNames" : [ "error" ],
        "metadataNames" : [ ],
        "checkAllKeys" : true
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "b47c27b0-da6d-11ee-880e-ed784018c015"
      },
      "name" : "noError",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbCheckMessageNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1012,
        "layoutY" : 311
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var arrTokens = {};\n\narrTokens[\"iBeacon\"] = \"j7olpfalgejhg5mra2i7\";\n\nmetadata.ok = false;\n\nif(arrTokens[metadata.deviceName] !== undefined){\n    metadata.tokenID = arrTokens[metadata.deviceName];\n    metadata.ok = true;\n}\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "45204ee0-da78-11ee-880e-ed784018c015"
      },
      "name" : "AsignarToken",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1014,
        "layoutY" : 396
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "return metadata.ok == \"true\";",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "45216050-da78-11ee-880e-ed784018c015"
      },
      "name" : "EnviarDato",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1013,
        "layoutY" : 469
      },
      "configuration" : {
        "restEndpointUrlPattern" : "http://vw01.tkmecloud.io/api/v1/${tokenID}/telemetry",
        "requestMethod" : "POST",
        "useSimpleClientHttpFactory" : false,
        "trimDoubleQuotes" : false,
        "ignoreRequestBody" : false,
        "enableProxy" : false,
        "useSystemProxyProperties" : false,
        "proxyScheme" : null,
        "proxyHost" : null,
        "proxyPort" : 0,
        "proxyUser" : null,
        "proxyPassword" : null,
        "readTimeoutMs" : 0,
        "maxParallelRequestsCount" : 10,
        "headers" : {
          "Content-Type" : "application/json"
        },
        "useRedisQueueForMsgPersistence" : false,
        "trimQueue" : null,
        "maxQueueSize" : null,
        "credentials" : {
          "type" : "anonymous"
        }
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "4521d580-da78-11ee-880e-ed784018c015"
      },
      "name" : "VW01",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rest.TbRestApiCallNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}